name: CI

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]
    
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    
    formatting:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ['3.8']
        
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Install Dependencies
                run: |
                    python -m pip install --upgrade pip
                    make dev

            -   name: Lint with isort, black, docformatter, flake8
                run: |
                    make lint
    

    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest] #, macos-latest]
                python-version: ['3.8']
        
        steps:
            -   uses: actions/checkout@v2
            
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
                    
            -   name: Set up Poetry cache for Python dependencies
                uses: actions/cache@v2
                if: startsWith(runner.os, 'Linux')
                with:
                    path: ~/.cache/pypoetry
                    key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
                    restore-keys: ${{ runner.os }}-poetry-
                    
            -   name: Install Poetry
                run: |
                    curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
                    python get-poetry.py -y
                    echo "$HOME/.poetry/bin" >> $GITHUB_PATH
            
            -   name: Install Dependencies
                run: |
                    poetry config virtualenvs.create false
                    poetry install --no-interaction
                    make dev

            -   name: Lint with isort, black, docformatter, flake8
                run: |
                    make autoformat
                    make lint
            
            -   name: Test with pytest
                run: |
                    make test-cov
            
            -   name: Generate docs
                run: |
                    make docs
            
            -   name: Upload to codecov.io
                uses: codecov/codecov-action@v1
                with:
                    file: ./coverage.xml
                    flags: unittests
                    name: codecov-umbrella
                    fail_ci_if_error: true
